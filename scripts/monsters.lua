-- This file has been generated by Dungeon Editor 2.2.4

-- TODO: place your custom monster definitions here

defineObject{
	name = "commander_lorn",
	baseObject = "base_monster",
	components = {
		{
			class = "Model",
			model = "assets/models/monsters/skeleton_knight_commander.fbx",
			storeSourceData = true, -- must be enabled for mesh particles to work
		},
		{
			class = "Animation",
			animations = {
				idle = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_idle.fbx",
				moveForward = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_walk.fbx",
				turnLeft = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_turn_left.fbx",
				turnRight = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_turn_right.fbx",
				attack = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_attack.fbx",
				attack2 = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_attack2.fbx",
				moveAttack = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_move_attack.fbx",
				rangedAttack = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_ranged_attack.fbx",
				summonUndead = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_summon_undead.fbx",
				turnAttackLeft = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_turn_attack_left.fbx",
				turnAttackRight = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_turn_attack_right.fbx",
				turnAroundAttack = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_turn_around_attack.fbx",
				getHitFrontLeft = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_get_hit_front_left.fbx",
				getHitFrontRight = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_get_hit_front_right.fbx",
				getHitBack = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_get_hit_back.fbx",
				getHitLeft = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_get_hit_left.fbx",
				getHitRight = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_get_hit_right.fbx",
				fall = "assets/animations/monsters/skeleton_knight_commander/skeleton_knight_commander_get_hit_front_left.fbx",
			},
			currentLevelOnly = true,
			onAnimationEvent = function(self, event)
				if event == "summon_undead_begin" then
					self.go.handLeftParticle:restart()
					self.go.handRightParticle:restart()
					self.go.spellLight:fadeIn(2.7)
				elseif event == "summon_undead_end" then
					self.go.spellLight:fadeOut(0.1)
				end
			end,
		},
		{
			class = "Monster",
			meshName = "skeleton_knight_commander_mesh",
			footstepSound = "skeleton_footstep",
			hitSound = "skeleton_hit",
			dieSound = "skeleton_die",
			hitEffect = "hit_dust",
			capsuleHeight = 0.7,
			capsuleRadius = 0.25,
			collisionRadius = 0.6,			
			health = 150,
			protection = 7,
			evasion = 0,
			immunities = { "sleep", "blinded", "frozen" },
			resistances = {
				["poison"] = "immune",
				["shock"] = "weak",
			},
			traits = { "undead" },
			exp = 750,
			lootDrop = { 100, "long_sword", 100, "long_sword" },
		},
		{
			class = "SkeletonCommanderBrain",
			name = "brain",
			sight = 6,
			allAroundSight = true,
			morale = 100,	-- fearless
		},
		{
			class = "MonsterMove",
			name = "move",
			sound = "skeleton_commander_walk",
			cooldown = 2,
		},
		{
			class = "MonsterTurn",
			name = "turn",
			sound = "skeleton_commander_walk",
		},
		{
			class = "MonsterAttack",
			name = "basicAttack",
			attackPower = 12,
			accuracy = 30,
			pierce = 12,
			woundChance = 25,
			cooldown = 4,
			sound = "skeleton_commander_attack",
			onBeginAction = function(self)
				-- randomize animation
				if math.random() < 0.5 then
					self:setAnimation("attack")
				else
					self:setAnimation("attack2")
				end
			end,
		},		
		{
			class = "MonsterAttack",
			name = "turnAttack",
			attackPower = 16,
			accuracy = 30,
			pierce = 12,
			woundChance = 25,
			cooldown = 0,
			sound = "skeleton_commander_turn_attack",
			turnToAttackDirection = true,
		},
		{
			class = "MonsterAttack",
			name = "rangedAttack",
			attackPower = 17,
			cooldown = 15,
			animation = "rangedAttack",
			sound = "skeleton_commander_ice_shards",
			onAttack = function(self)
				-- cast ice shards
				local dx,dy = getForward(self.go.facing)
				local spell = spawn("ice_shards", self.go.level, self.go.x + dx, self.go.y + dy, self.go.facing, self.go.elevation)
				spell.iceshards:setRange(5)
				spell.tiledamager:setAttackPower(32)
			end,
		},
		{
			class = "MonsterMoveAttack",
			name = "moveAttack",
			attackPower = 17,
			accuracy = 50,
			pierce = 12,
			woundChance = 25,
			cooldown = 6,
			animation = "moveAttack",
			sound = "skeleton_commander_move_attack",
		},
		{
			class = "MonsterAttack",
			name = "summonUndead",
			cooldown = 80,
			repeatChance = 0,
			animation = "summonUndead",
			sound = "skeleton_commander_summon_spell",
			onAttack = function(self)
				for tries=1,20 do
					-- choose summon location
					local dx,dy = getForward(self.go.facing)
					local x = self.go.x + math.random(-1,1)
					local y = self.go.y + math.random(-1,1)
					
					-- is valid spawn point?
					local map = self.go.map
					local elevation = map:getElevation(x, y)
					if not map:isBlocked(x, y, elevation) then
						spawn("undead", self.go.level, x, y, self.go.facing, elevation)
						return
					end
				end
			end,
		},
		{
			class = "Particle",
			name = "handLeftParticle",
			parentNode = "hand_left",
			particleSystem = "skeleton_commander_spell",
			offset = vec(0.1, 0, 0),
			enabled = false,
		},
		{
			class = "Particle",
			name = "handRightParticle",
			parentNode = "hand_right",
			particleSystem = "skeleton_commander_spell",
			offset = vec(0.1, 0, 0),
			enabled = false,
		},
		{
			class = "Light",
			name = "spellLight",
			parentNode = "spine1",
			offset = vec(0.4, 0, 0.25),
			--debugDraw = true,
			color = vec(0.45,0.6,1),
			brightness = 8,
			range = 4,
			fadeOut = 0,
			fillLight = true,
		},
	},
}

defineObject{
	name = "undead_peasant",
	baseObject = "base_monster",
	components = {
		{
			class = "Model",
			model = "assets/models/monsters/undead.fbx",
			storeSourceData = true, -- must be enabled for mesh particles to work
		},
		{
			class = "Animation",
			animations = {
				rise = "assets/animations/monsters/undead/undead_rise.fbx",
				idle = "assets/animations/monsters/undead/undead_idle.fbx",
				moveForward = "assets/animations/monsters/undead/undead_walk.fbx",
				turnLeft = "assets/animations/monsters/undead/undead_turn_left.fbx",
				turnRight = "assets/animations/monsters/undead/undead_turn_right.fbx",
				attack = "assets/animations/monsters/undead/undead_attack.fbx",
				getHitFrontLeft = "assets/animations/monsters/undead/undead_get_hit_front_left.fbx",
				getHitFrontRight = "assets/animations/monsters/undead/undead_get_hit_front_right.fbx",
				getHitBack = "assets/animations/monsters/undead/undead_get_hit_back.fbx",
				getHitLeft = "assets/animations/monsters/undead/undead_get_hit_left.fbx",
				getHitRight = "assets/animations/monsters/undead/undead_get_hit_right.fbx",
				fall = "assets/animations/monsters/undead/undead_get_hit_front_left.fbx",
			},
			currentLevelOnly = true,
		},
		{
			class = "Monster",
			meshName = "undead_mesh",
			footstepSound = "skeleton_footstep",
			hitSound = "skeleton_hit",
			dieSound = "undead_die",
			hitEffect = "hit_dust",
			capsuleHeight = 0.7,
			capsuleRadius = 0.25,
			collisionRadius = 0.6,
			health = 60,
			immunities = { "sleep" },
			resistances = { ["poison"] = "immune" },
			traits = { "undead" },
			evasion = 0,
			exp = 200,
			onInit = function(self)
				self:performAction("rise")
			end,
			headRotation = vec(0, 0, 90),
		},
		{
			class = "MeleeBrain",
			name = "brain",
			sight = 5,
			morale = 100,
		},
		{
			class = "MonsterAction",
			name = "rise",
			animation = "rise",
		},
		{
			class = "MonsterMove",
			name = "move",
			sound = "undead_walk",
			cooldown = 6,
		},
		{
			class = "MonsterTurn",
			name = "turn",
			sound = "undead_walk",
		},
		{
			class = "MonsterAttack",
			name = "basicAttack",
			attackPower = 12,
			pierce = 3,
			cooldown = 4,
			sound = "undead_attack",
		},
		{
			class = "Particle",
			particleSystem = "undead_rise",
			disableSelf = true,
		},
	},
}